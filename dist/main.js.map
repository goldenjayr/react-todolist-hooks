{"version":3,"sources":["webpack:///./src/components/button/button.scss?d134","webpack:///./src/containers/App.js"],"names":["App","useState","taskList","setTaskList","doneTaskCount","setDoneTaskCount","editValue","setEditValue","taskIdOnEdit","setTaskIdOnEdit","inputEl","useRef","addTaskHandler","e","preventDefault","current","value","newTask","taskId","Date","now","taskName","isEdit","newTaskList","filterRemovedTask","id","filter","task","deleteTaskHandler","doneTaskHandler","newTaskCount","toggleEditFormHandler","isEditTaskSwitched","map","onEditChangeHandler","target","editTaskHandler","editedTasks"],"mappings":"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","file":"main.eebbae34c0aee9bb650a.hot-update.js","sourcesContent":["// extracted by mini-css-extract-plugin","import React, {useState, useRef} from 'react'\n\nimport Button from '../components/button/Button'\n\n\nconst App = () => {\n    const [taskList, setTaskList] = useState([])\n    const [doneTaskCount, setDoneTaskCount] = useState(0)\n    const [editValue, setEditValue] = useState('')\n    const [taskIdOnEdit, setTaskIdOnEdit] = useState(0)\n    const inputEl = useRef()\n\n\n    const addTaskHandler = (e) => {\n        e.preventDefault()\n        if(inputEl.current.value === '') return\n        const newTask = {\n            taskId: Date.now(),\n            taskName: inputEl.current.value,\n            isEdit:false\n        }\n        const newTaskList = [...taskList, newTask]\n        setTaskList(newTaskList)\n        inputEl.current.value = ''\n    }\n\n    const filterRemovedTask = (id) => {\n        const newTaskList = taskList.filter(task => {\n            return task.taskId !== id\n        })\n        return newTaskList\n    }\n\n    const deleteTaskHandler = (id) => {\n        const newTaskList = filterRemovedTask(id)\n        setTaskList(newTaskList)\n    }\n\n    const doneTaskHandler = (id) => {\n        const newTaskList = filterRemovedTask(id)\n        setTaskList(newTaskList)\n        const newTaskCount = doneTaskCount + 1\n        setDoneTaskCount(newTaskCount)\n    }   \n\n    const toggleEditFormHandler = (id) => {\n        const isEditTaskSwitched = taskList.map(task => {\n            if(task.taskId === id) task.isEdit = true\n            return task\n        })\n        setTaskList(isEditTaskSwitched)\n        setTaskIdOnEdit(id)\n    }\n\n    const onEditChangeHandler = (e) => {\n        setEditValue(e.target.value)\n    }\n\n    const editTaskHandler = (e, id) => {\n        e.preventDefault()\n        const editedTasks = taskList.map(task => {\n            if(task.taskId === id) task.taskName = editValue\n            return task\n        })\n        setTaskList(editedTasks)\n        setEditValue('')\n        toggleEditFormHandler(id)\n    }\n\n    return(\n        <div>\n            <form onSubmit={addTaskHandler}>\n                <input \n                type=\"text\" \n                placeholder=\"Add a task\" \n                ref={inputEl}\n                />\n                <Button \n                type=\"submit\"\n                className=\"btn-primary\"\n                >Add</Button>\n            </form>\n            <div>\n                <ul>\n                    {taskList.map(task => {\n                        return (\n                            <li key={task.taskId}>\n                                {task.taskName}\n                                <button \n                                    onClick={() => toggleEditFormHandler(task.taskId)}\n                                >Edit</button>\n                                <button\n                                    onClick={() => doneTaskHandler(task.taskId)}\n                                >Done</button>\n                                <button\n                                    onClick={() => deleteTaskHandler(task.taskId)}\n                                >Delete</button>\n                                {task.isEdit === true && task.taskId === taskIdOnEdit &&\n                                    <form onSubmit={(e) => editTaskHandler(e, task.taskId)}>\n                                        <input type=\"text\" placeholder={task.taskName} value={editValue} onChange={onEditChangeHandler}/>\n                                        <button type=\"submit\">Save</button>\n                                    </form>\n                                }\n                            </li>\n                        ) \n                    })}\n                </ul>\n            </div>\n            <div>\n                Acomplished Task: {doneTaskCount}\n            </div>\n        </div>\n     )\n}\n\nexport default App"],"sourceRoot":""}